{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer' ;\nimport { isPrimitive as isString } from '@stdlib/assert-is-string' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\nimport base from '@stdlib/string-base-starts-with' ;\n\n\n// MAIN //\n\n/**\n* Tests if a string starts with the characters of another string.\n*\n* @param {string} str - input string\n* @param {string} search - search string\n* @param {integer} [position=0] - position at which to start searching\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @throws {TypeError} third argument must be an integer\n* @returns {boolean} boolean indicating if the input string starts with the search string\n*\n* @example\n* var bool = startsWith( 'Remember the story I used to tell you when you were a boy?', 'Remember' );\n* // returns true\n*\n* @example\n* var bool = startsWith( 'Remember the story I used to tell you when you were a boy?', 'Remember, remember' );\n* // returns false\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'To be' );\n* // returns true\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'to be' );\n* // returns false\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'to be', 14 );\n* // returns true\n*\n* @example\n* var bool = startsWith( 'To be, or not to be, that is the question.', 'quest', -9 );\n* // returns true\n*/\nfunction startsWith( str, search, position ) {\n\tvar pos;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( '0hd3R', str ) );\n\t}\n\tif ( !isString( search ) ) {\n\t\tthrow new TypeError( format( '0hd3L', search ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isInteger( position ) ) {\n\t\t\tthrow new TypeError( format( '0hd3B', position ) );\n\t\t}\n\t\tpos = position;\n\t} else {\n\t\tpos = 0;\n\t}\n\treturn base( str, search, pos );\n}\n\n\n// EXPORTS //\n\nexport default startsWith;\n"],"names":["startsWith","str","search","position","pos","isString","TypeError","format","arguments","length","isInteger","base"],"mappings":";;0YAiEA,SAASA,EAAYC,EAAKC,EAAQC,GACjC,IAAIC,EACJ,IAAMC,EAAUJ,GACf,MAAM,IAAIK,UAAWC,EAAQ,QAASN,IAEvC,IAAMI,EAAUH,GACf,MAAM,IAAII,UAAWC,EAAQ,QAASL,IAEvC,GAAKM,UAAUC,OAAS,EAAI,CAC3B,IAAMC,EAAWP,GAChB,MAAM,IAAIG,UAAWC,EAAQ,QAASJ,IAEvCC,EAAMD,OAENC,EAAM,EAEP,OAAOO,EAAMV,EAAKC,EAAQE"}